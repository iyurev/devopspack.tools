apiVersion: k3d.io/v1alpha3
kind: Simple
name: {{ k3d_cluster_name }}
servers: {{ k3d_servers }}
agents: {{ k3d_agents }}
kubeAPI: # same as `--api-port myhost.my.domain:6445` (where the name would resolve to 127.0.0.1)
  host: "myhost.my.domain" # important for the `server` setting in the kubeconfig
  hostIP: "127.0.0.1" # where the Kubernetes API will be listening on
  hostPort: {{ k3d_api_server_port }} # where the Kubernetes API listening port will be mapped to on your host system

image: rancher/k3s:v1.20.4-k3s1 # same as `--image rancher/k3s:v1.20.4-k3s1`
#network: my-custom-net # same as `--network my-custom-net`
#subnet: "172.28.0.0/16" # same as `--subnet 172.28.0.0/16`
#token: superSecretToken # same as `--token superSecretToken`
volumes: # repeatable flags are represented as YAML lists
  - volume: /my/host/path:/path/in/node # same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
    nodeFilters:
      - server:0
      - agent:*

ports: {{ k3d_ports }}

env:
  - envVar: bar=baz # same as `--env 'bar=baz@server:0'`
    nodeFilters:
      - server:0

# registries: # define how registries should be created or used
#   create: # creates a default registry to be used with the cluster; same as `--registry-create registry.localhost`
#     name: registry.localhost
#     host: "0.0.0.0"
#     hostPort: "5000"
#   use:
#     - k3d-myotherregistry:5000 # some other k3d-managed registry; same as `--registry-use 'k3d-myotherregistry:5000'`
#   config: | # define contents of the `registries.yaml` file (or reference a file); same as `--registry-config /path/to/config.yaml`
#     mirrors:
#       "my.company.registry":
#         endpoint:
#           - http://my.company.registry:5000
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
    timeout: "60s" # wait timeout before aborting; same as `--timeout 60s`
    disableLoadbalancer: false # same as `--no-lb`
    disableImageVolume: false # same as `--no-image-volume`
    disableRollback: false # same as `--no-Rollback`
    loadbalancer:
      configOverrides:
        - settings.workerConnections=2048
#  k3s: # options passed on to K3s itself
#    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`
#      - arg: --tls-san=my.host.domain
#        nodeFilters:
#          - server:*
#    nodeLabels:
#      - label: foo=bar # same as `--k3s-node-label 'foo=bar@agent:1'` -> this results in a Kubernetes node label
#        nodeFilters:
#          - agent:1
  kubeconfig:
    updateDefaultKubeconfig: {{ k3d_kubeconfig_update_default }}
    switchCurrentContext: {{ k3d_kubeconfig_switch_current_context }}
#   runtime: # runtime (docker) specific options
#     gpuRequest: all # same as `--gpus all`
#     labels:
#       - label: bar=baz # same as `--runtime-label 'bar=baz@agent:1'` -> this results in a runtime (docker) container label
#         nodeFilters:
#           - agent:1